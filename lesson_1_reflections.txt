How did viewing a diff between two versions of a file help you see the bug that
was introduced?

   diff helps to pinpoint diffferences between the two versions of a file where a potential bug was introduced.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    Any changes made to the file can be backtracked to help with debugging.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    The manual approach offers more flexibility and control in regard to what and when to commit. There is also less redundancy. The auto approach, by contrast, is more fail-safe and foolproof but sacrifices efficiency. 

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Allowing saving multiple files in one commit is more coding friendly (i.e. tey are connected to form a logical group) whilst treating each file separately is more individual document focused and therefore lacks the birdseye view on change.

How can you use the commands git log and git diff to view the history of files?

    Fill in your answer here

How might using version control make you more confident to make changes that
could break something?

    Simply knowing that all the changes are tracked and retrieved in git gives me more confidence to make changes, even the ones that are likely to break things. `git checkout commit_id` is a great way to "go back in time" to trace out the bug introduced.

Now that you have your workspace set up, what do you want to try using Git for?

    Fill in your answer here
